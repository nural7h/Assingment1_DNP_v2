@page "/ViewPosts"
@using Domain.Models
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IPostService postService;

@if (showModal)
{
    <Modal ShowModal="showModal">
        <div class="card">
            @if (posts == null)
            {
                <label>Loading users...</label>
            }
            else if (!posts.Any())
            {
                <label>No users, you cannot create a Todo</label>
            }
            else if (post == null)
            {
                <label>Loading Todo data..</label>
            }
            else
            {
                <h3>Title: @post.Title</h3>
                <div class="form-group field">
                    <label>Owner:@post.OwnerUsername</label>
                </div>
                <div class="form-group field">
                    <label>Content:@post.Content</label>
                </div>
            }
            @if (!string.IsNullOrEmpty(msg))
            {
                <label style="color: red">@msg</label>
            }
        </div>


    </Modal>
}




<h3>ViewPosts</h3>

<h3 style="text-align: center">Overview of all posts</h3>

@if (!string.IsNullOrEmpty(msg))
{
    <div>
        <span>@msg</span>
    </div>
}

@if (posts == null)
{
    <span>Loading..</span>
}
else if (!posts.Any())
{
    <span>No posts to be found</span>
}
else
{
    <div class="posts-container">
        @foreach (Post post in posts)
        {
            <div class="post-card">
                <label @onclick="() => ViewPost(post.Id)">@post.Title</label>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<Post>? posts;
    private string msg = "";
    private PostBasicDto post=null!;
    private bool showModal = false;

    protected override async Task OnInitializedAsync()
    {
        msg = "";
        try
        {
            posts = await postService.ViewAllPostsAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }

    private async Task ViewPost(int id)
    {
        msg = "";
        try
        {
            PostBasicDto result = await postService.GetPostByIdAsync(id);
            post = result;
            showModal = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}